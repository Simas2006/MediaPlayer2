--- Cryptography Spec ---
All message sent to the server must be encrypted using AES with an initialization vector. Messages returned from the server must be encrypted unless their contents are "ok" or "error".
The CONN command must be in the plaintext format "CONN <the text 'mp2-authentication' (or 'mp2-dlp-authentication' if using DLP) encrypted using the password>".
After the DCONN command is issued, the authentication key will be considered to be invalid until it is reused with a CONN command.
When using DLP, due to the small amount of commands, the password (filtered by an alternate cryptographer using the built-in crypto library) will be used as the key, as the CONN and DCONN commands are not present.

--- Command Spec ---
CONN                       ; Creates an authentication key to be returned to the client to be used in place of the password in normal communications. Is the first message sent to the server. Fails if there is already a connection which has not DCONN'd yet. See the cryptography spec for details.
DCONN                      ; Deauthorizes a given connection. Is the last message sent to the server. Returns "ok" normally.
LIST  <path>               ; Lists the contents of a directory.
TYPE  <path>               ; If a directory signified by the path contains only other directories, returns "directory", otherwise, returns "file".
PING                       ; If encrypted using a valid key, server should always return "ok". Used to check if the client has been forcibly DCONN'd.

ADDTQ <dirpath> <filelist> ; Adds songs in the dirpath directory to the queue. Returns "ok" normally.
OPENP <path>               ; Opens a photo album. Returns the name of the first photo normally.
PREVP                      ; Goes back to the previous photo. Returns the name of the photo normally, with a suffix of "_first" if the result is the first picture.
NEXTP                      ; Goes to the next photo. Returns the name of the photo normally, with a suffix of "_last" if the result is the last picture.

HOME                       ; Returns from a subpage to the default page on the server.
WOPN  <url>                ; Opens the URL in a sandboxed browser on the server, even if a webpage is already present. Returns "ok" normally.

PLYPS                      ; Plays (or pauses) the current song. Returns "ok" normally.
PNSNG                      ; Plays the next song in the queue. If the queue is empty, will stop playing altogether. Returns the same result as GETQ.
RWIND                      ; Rewinds the current song to position 0. Returns "ok" normally.

UPVL                       ; Increments the volume by 5%. Returns the new volume normally.
DWNVL                      ; Decrements the volume by 5%. Returns the new volume normally.
MUTVL                      ; Mutes and unmutes the volume. Returns the new volume normally.

GETQ                       ; Returns the queue with the full paths of the songs, comma-separated, with a prefix of the volume percentage and ",playing," or ",paused,", depending on the current state of the playing song.
UPSQ  <index> <totop>      ; Moves the indexed song in the queue upwards one song if totop is false, and up to the top if it is true. Returns the same result as GETQ.
DWNSQ <index>              ; Moves the indexed song in the queue downward one song. Returns the same result as GETQ.
DELSQ <index>              ; Removes the indexed song from the queue. Returns the same result as GETQ.
CLRQ                       ; Clears the queue and triggers PNSNG. Returns "ok" normally.
SHFLQ                      ; Shuffles the queue. Returns "ok" normally.

--- DLP Command Spec ---
LIST                       ; Returns a comma-separated list of all photo albums normally.
INTDL <album>              ; Returns the IV to be used to decrypt the ZIP file and a unique ID to use when downloading the file, separated by a comma. Should always be run before DWNLD.
DWNLD <id>                 ; Returns an (encrypted, without IV appended) zip file corresponding to the album data normally. Will return "error" if the ID is invalid.

--- Layer Spec ---
Mobile App Front-End (shows choices to user)
Mobile App HTTPDevice (crypto, sending and recieving HTTP)
TV App Server (crypto, authenticatio, sending and recieving HTTP, communicating with interactions)
TV App Interactions.js (fires handlers for commands, back-end of directory listing)
TV App Front-End (shows choices to user, displays pictures, webpages)
